## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/email/check
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: drolfson@example.com
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'user login'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: bergnaum.gussie@example.org
        type: string
      password:
        name: password
        description: ''
        required: true
        example: odio
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: illum
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: wreinger@example.net
        type: string
      password:
        name: password
        description: ''
        required: true
        example: ea
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/calendars
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [{
           "id" : 1,
           "title" : "Calendar name",
           "desc" : "Calendar description",
           "planners_count" : 1,
           "user" : {
             "name" : "username",
             "email" : "user email",
             "id" : 1
           }
          }]
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users/calendars
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'the calendar title'
        required: true
        example: qui
        type: string
      desc:
        name: desc
        description: 'Calendar description'
        required: false
        example: qui
        type: string
    responses:
      -
        status: 201
        content: |-
          [
          "message" : "Calendar {calendar name } created successfully",
          "timestamp" : "2021-08-05 01:00 pm"
          "data" :{
           "id" : 1,
           "title" : "Calendar name",
           "desc" : "Calendar description",
           "planners_count" : 1,
           "user" : {
             "name" : "username",
             "email" : "user email",
             "id" : 1
           }
          }]
        headers: []
        description: '201'
      -
        status: 409
        content: |-
          [
            "message" : "Item Already Exists"
          ]
        headers: []
        description: '409'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/calendars/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 19
        type: integer
    queryParameters:
      id:
        name: id
        description: |-
          Required Calendar Id
           @response {
           "id" : 1,
           "title" : "Calendar name",
           "desc" : "Calendar description",
           "planners_count" : 1,
           "user" : {
             "name" : "username",
             "email" : "user email",
             "id" : 1
           }
          }
        required: false
        example: 1
        type: integer
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/calendars/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: '@queryParam id int Required Calendar Id'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 9
        type: integer
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: |-
          Required Calendar title
           @bodyParam desc string Calendar description
           @response 201 [
           'message' : 'Calendar Updated successfully',
           data: {
           "id" : 1,
           "title" : "Calendar name",
           "desc" : "Calendar description",
           "planners_count" : 1,
           "user" : {
             "name" : "username",
             "email" : "user email",
             "id" : 1
           }
          }]
        required: false
        example: laboriosam
        type: string
      desc:
        name: desc
        description: ''
        required: false
        example: est
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/calendars/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: '@queryParam id int Required Calendar id you want to delete'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [
             'message' => 'Calendar deleted successfully'
           ]
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/planners
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users/planners
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: ea
        type: string
      bg_color:
        name: bg_color
        description: ''
        required: false
        example: voluptatem
        type: string
      color:
        name: color
        description: ''
        required: false
        example: est
        type: string
      icon:
        name: icon
        description: ''
        required: false
        example: delectus
        type: string
      desc:
        name: desc
        description: ''
        required: false
        example: dolor
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/planners/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the planner.'
        required: true
        example: 5
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/planners/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the planner.'
        required: true
        example: 3
        type: integer
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: odit
        type: string
      bg_color:
        name: bg_color
        description: ''
        required: false
        example: incidunt
        type: string
      color:
        name: color
        description: ''
        required: false
        example: minus
        type: string
      icon:
        name: icon
        description: ''
        required: false
        example: ullam
        type: string
      desc:
        name: desc
        description: ''
        required: false
        example: nam
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/planners/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the planner.'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
